<UserControl x:Class="CouponReader.Common.Controls.CouponsHistoryControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>

            <!-- COLORS -->
            <Color x:Key="AccentColor">#2F4B66</Color>
            <Color x:Key="BackgroundColor">#F4F6F7</Color>
            <Color x:Key="WhiteColor">#FFFFFF</Color>
            <Color x:Key="BlackColor">#000000</Color>
            <Color x:Key="StandardColor">#f4f6f7</Color>
            <Color x:Key="HoverColor">#f4f6f7</Color>
            <Color x:Key="PressedColor">#f4f6f7</Color>
            <Color x:Key="DialogBackgroundColor">#FF666666</Color>
            <Color x:Key="ScollBarBackgroundStart">#772F4B66</Color>
            <Color x:Key="ScollBarBackgroundEnd">#992F4B66</Color>
            
            <!-- BRUSHES -->
            <SolidColorBrush x:Key="AccentBrush" Color="{StaticResource AccentColor}" />
            <SolidColorBrush x:Key="BackgroundBrush" Color="{StaticResource BackgroundColor}" />
            <SolidColorBrush x:Key="WhiteBrush" Color="{StaticResource WhiteColor}" />
            <SolidColorBrush x:Key="BlackBrush" Color="{StaticResource BlackColor}" />
            <SolidColorBrush x:Key="StandardBrush" Color="{StaticResource StandardColor}" />
            <SolidColorBrush x:Key="HoverBrush" Color="{StaticResource HoverColor}" />

            <LinearGradientBrush x:Key="ScollBarBackgroundBrush" StartPoint="0,0" EndPoint="1,0">
                <LinearGradientBrush.GradientStops>
                    <GradientStop Offset="0" Color="{StaticResource ScollBarBackgroundStart}" />
                    <GradientStop Offset="1" Color="{StaticResource ScollBarBackgroundEnd}" />
                </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>
            
            <!-- STYLES -->
            <Style x:Key="CouponsTextStyle" TargetType="TextBlock">
                <Setter Property="FontFamily" 
                        Value="{StaticResource BrandonGrotesqueMedium}"/>
                <Setter Property="FontSize" Value="18"/>
                <Setter Property="Foreground" Value="{StaticResource AccentBrush}"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="12"/>
            </Style>

            <DataTemplate x:Key="RowDetailTemplate">
                <Grid
                    x:Name="RowDetailGrid"
                    Background="White"
			        Height="Auto">
                    <Image 
                        Source="{Binding Coupon.ImageUrl}"
                        Stretch="Uniform"
                        Height="200"
                        Margin="12">
                        <Image.BitmapEffect>
                            <DropShadowBitmapEffect 
                                Color="Black" 
                                Direction="320" 
                                Softness="1" 
                                ShadowDepth="5" 
                                Opacity="0.2" />
                        </Image.BitmapEffect>
                    </Image>
                </Grid>
            </DataTemplate>

            <!--  Scrollbar Buttons  -->
            <Style x:Key="ScrollButtons" TargetType="{x:Type RepeatButton}">
                <Setter Property="Focusable" Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border Name="Border" Background="Transparent">
                                <ContentPresenter
                                    Name="ContentPresenter"
						            HorizontalAlignment="Center"
						            VerticalAlignment="Center"
						            Content="{TemplateBinding Content}"
						            ContentTemplate="{TemplateBinding ContentTemplate}"
						            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--  Scrollbar Thumbs  -->
            <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
                <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Grid Name="Grid">
                                <Rectangle Width="Auto"
						           Height="Auto"
						           HorizontalAlignment="Stretch"
						           VerticalAlignment="Stretch"
						           Fill="Transparent" />
                                <Rectangle Name="Rectangle1"
						           Width="7"
						           Height="Auto"
						           HorizontalAlignment="Stretch"
						           VerticalAlignment="Stretch"
						           Fill="{TemplateBinding Background}"
						           RadiusX="4"
						           RadiusY="4" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Tag" Value="Horizontal">
                                    <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                                    <Setter TargetName="Rectangle1" Property="Height" Value="7" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--  Scrollbar  -->
            <Style x:Key="MyScrollBar" TargetType="{x:Type ScrollBar}">
                <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrush}}" />
                <Setter Property="Background" Value="{DynamicResource ScollBarBackgroundBrush}" />
                <Setter Property="Width" Value="12" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="GridRoot"
					      Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidth}}"
					      Background="{TemplateBinding Background}">
                                <Grid.RowDefinitions>
                                    <RowDefinition MaxHeight="18" />
                                    <RowDefinition Height="0.00001*" />
                                    <RowDefinition MaxHeight="18" />
                                </Grid.RowDefinitions>
                                <RepeatButton x:Name="DecreaseRepeat"
						              Command="ScrollBar.LineUpCommand"
						              Foreground="{StaticResource StandardBrush}"
						              Style="{DynamicResource ScrollButtons}">
                                    <Path 
                                        x:Name="DecreaseArrow"
							            HorizontalAlignment="Center"
							            VerticalAlignment="Center"
							            Data="F1 M 3.5,0L 0,7L 7,7L 3.5,0 Z "
							            Fill="{StaticResource StandardBrush}" />
                                </RepeatButton>
                                <Track
                                    x:Name="PART_Track"
						            Grid.Row="1"
						            Focusable="false"
						            IsDirectionReversed="true">
                                    <Track.Thumb>
                                        <Thumb 
                                            x:Name="Thumb"
								            Background="{DynamicResource ButtonDefaultBrush}"
								            Style="{DynamicResource ScrollThumbs}" />
                                    </Track.Thumb>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton x:Name="PageUp"
								              Command="ScrollBar.PageDownCommand"
								              Focusable="false"
								              Opacity="0" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton x:Name="PageDown"
								              Command="ScrollBar.PageUpCommand"
								              Focusable="false"
								              Opacity="0" />
                                    </Track.DecreaseRepeatButton>
                                </Track>
                                <RepeatButton 
                                    x:Name="IncreaseRepeat"
						            Grid.Row="2"
						            Command="ScrollBar.LineDownCommand"
						            Foreground="{DynamicResource StandardBrush}"
						            Style="{DynamicResource ScrollButtons}">
                                    <Path
                                        x:Name="IncreaseArrow"
							            HorizontalAlignment="Center"
							            VerticalAlignment="Center"
							            Data="F1 M 3.5,7L 7,0L 0,0L 3.5,7 Z "
							            Fill="{StaticResource StandardBrush}" />
                                </RepeatButton>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger SourceName="IncreaseRepeat" Property="IsMouseOver" Value="true">
                                    <Setter TargetName="IncreaseArrow" Property="Fill" Value="{StaticResource HoverBrush}" />
                                </Trigger>
                                <Trigger SourceName="DecreaseRepeat" Property="IsMouseOver" Value="true">
                                    <Setter TargetName="DecreaseArrow" Property="Fill" Value="{StaticResource HoverBrush}" />
                                </Trigger>
                                <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                                    <Setter TargetName="Thumb" Property="Background" Value="{StaticResource HoverBrush}" />
                                </Trigger>
                                <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                                    <Setter TargetName="Thumb" Property="Background" Value="{StaticResource StandardBrush}" />
                                </Trigger>
                                <Trigger SourceName="IncreaseRepeat" Property="IsPressed" Value="true">
                                    <Setter TargetName="IncreaseArrow" Property="Fill" Value="{StaticResource StandardBrush}" />
                                </Trigger>
                                <Trigger SourceName="DecreaseRepeat" Property="IsPressed" Value="true">
                                    <Setter TargetName="DecreaseArrow" Property="Fill" Value="{StaticResource StandardBrush}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="IncreaseArrow" Property="Fill" Value="{DynamicResource LayerChild1Brush}" />
                                    <Setter TargetName="DecreaseArrow" Property="Fill" Value="{DynamicResource LayerChild1Brush}" />
                                    <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="Orientation" Value="Horizontal">
                                    <Setter TargetName="GridRoot" Property="LayoutTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="PART_Track" Property="LayoutTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Width" Value="Auto" />
                                    <Setter Property="Height" Value="12" />
                                    <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                                    <Setter TargetName="DecreaseRepeat" Property="Command" Value="ScrollBar.LineLeftCommand" />
                                    <Setter TargetName="IncreaseRepeat" Property="Command" Value="ScrollBar.LineRightCommand" />
                                    <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                                    <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- DataGrid -->
            <Style TargetType="{x:Type DataGridColumnHeader}">
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Height" Value="35" />
                <Setter Property="SeparatorBrush" Value="DarkRed" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="FontSize" Value="16" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                            <Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="columnHeaderBorder" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                    <EasingColorKeyFrame KeyTime="0" Value="#4B4B4B" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Border
                                    x:Name="columnHeaderBorder"
						            BorderThickness="1"
						            Padding="3,0,3,0">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                            <GradientStop Offset="0" Color="#2F4B66" />
                                            <GradientStop Offset="1" Color="#4B4B4B" />
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                            <GradientStop Offset="0" Color="#2F4B66" />
                                            <GradientStop Offset="1" Color="#2F4B66" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <ContentPresenter 
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type DataGridRow}">
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Background" Value="White" />
                <Setter Property="SnapsToDevicePixels" Value="true" />
                <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
                <Setter Property="ValidationErrorTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <TextBlock 
                                Margin="2,0,0,0"
					            VerticalAlignment="Center"
					            Foreground="Red"
					            Text="!" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridRow}">
                            <Border x:Name="DGR_Border"
					        BorderBrush="{TemplateBinding BorderBrush}"
					        BorderThickness="{TemplateBinding BorderThickness}"
					        SnapsToDevicePixels="True">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <GradientStop Offset="0" Color="#f4f6f7" />
                                        <GradientStop Offset="1" Color="#d6dee2" />
                                    </LinearGradientBrush>
                                </Border.Background>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="Normal_AlternatingRow">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                    <EasingColorKeyFrame KeyTime="0" Value="#AAf4f6f7" />
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                    <EasingColorKeyFrame KeyTime="0" Value="White" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Normal_Selected">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background).                         (GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                    <EasingColorKeyFrame KeyTime="0" Value="#708a97" />
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background).                         (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                    <EasingColorKeyFrame KeyTime="0" Value="#708a97" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background).                         (GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                    <EasingColorKeyFrame KeyTime="0" Value="#c8d2d7" />
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background).                         (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                    <EasingColorKeyFrame KeyTime="0" Value="#c8d2d7" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <SelectiveScrollingGrid>
                                    <SelectiveScrollingGrid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </SelectiveScrollingGrid.ColumnDefinitions>
                                    <SelectiveScrollingGrid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </SelectiveScrollingGrid.RowDefinitions>
                                    <DataGridCellsPresenter Grid.Column="1"
							                        ItemsPanel="{TemplateBinding ItemsPanel}"
							                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    <DataGridDetailsPresenter Grid.Row="1"
							                          Grid.Column="1"
							                          SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen,
							                                                                                         ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical},
							                                                                                         Converter={x:Static DataGrid.RowDetailsScrollingConverter},
							                                                                                         RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
							                          Visibility="{TemplateBinding DetailsVisibility}" />
                                    <DataGridRowHeader Grid.RowSpan="2"
							                   SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
							                   Visibility="{Binding HeadersVisibility,
							                                        ConverterParameter={x:Static DataGridHeadersVisibility.Row},
							                                        Converter={x:Static DataGrid.HeadersVisibilityConverter},
							                                        RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                </SelectiveScrollingGrid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type DataGridCell}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridCell}">
                            <Border
                                x:Name="border"
					            Background="Transparent"
					            BorderBrush="Transparent"
					            BorderThickness="1"
					            SnapsToDevicePixels="True">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualState x:Name="Unfocused" />
                                        <VisualState x:Name="Focused" />
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="CurrentStates">
                                        <VisualState x:Name="Regular" />
                                        <VisualState x:Name="Current">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                                    <EasingColorKeyFrame KeyTime="0" Value="Gray" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="ToggleButton">
                <Setter Property="Padding" Value="6" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="DefaultPath" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                                    <SplineColorKeyFrame KeyTime="0:0:0.2" Value="#2F4B66" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed" />
                                        <VisualState x:Name="Disabled" />
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="CheckStates">
                                        <VisualState x:Name="Checked">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Duration="0"
										                               Storyboard.TargetName="DefaultPath"
										                               Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Collapsed</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Duration="0"
										                               Storyboard.TargetName="CheckedPath"
										                               Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Visible</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="CheckedPath" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                                    <SplineColorKeyFrame KeyTime="0:0:0.2" Value="#2F4B66" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Unchecked" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <ContentPresenter 
                                    x:Name="contentPresenter"
						            Margin="{TemplateBinding Padding}"
						            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
						            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
						            Content="{TemplateBinding Content}"
						            ContentTemplate="{TemplateBinding ContentTemplate}" />
                                <Path 
                                    x:Name="DefaultPath"
						            VerticalAlignment="Top"
						            Data="M0,0 14,7 0,14 Z"
						            Fill="Gray"
						            Stretch="Fill" />
                                <Path 
                                    x:Name="CheckedPath"
						            VerticalAlignment="Top"
						            Data="M0,0 14,0 7,14 Z"
						            Fill="LightGray"
						            Stretch="Fill"
						            Visibility="Collapsed" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type DataGrid}">
                <Setter Property="FontFamily" Value="{StaticResource BrandonGrotesqueMedium}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
                <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
                <Setter Property="ScrollViewer.PanningMode" Value="Both" />
                <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGrid}">
                            <Border 
                                Background="{TemplateBinding Background}"
					            BorderBrush="{TemplateBinding BorderBrush}"
					            BorderThickness="2"
					            CornerRadius="5"
					            Padding="{TemplateBinding Padding}"
					            SnapsToDevicePixels="True">
                                <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                                    <ScrollViewer.Template>
                                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="*" />
                                                    <RowDefinition Height="Auto" />
                                                </Grid.RowDefinitions>
                                                <Button
                                                    Width="{Binding CellsPanelHorizontalOffset,
										                        RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
										            Command="{x:Static DataGrid.SelectAllCommand}"
										            Focusable="false"
										            Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle,
										                                                          TypeInTargetAssembly={x:Type DataGrid}}}"
										            Visibility="{Binding HeadersVisibility,
										                                 ConverterParameter={x:Static DataGridHeadersVisibility.All},
										                                 Converter={x:Static DataGrid.HeadersVisibilityConverter},
										                                 RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
										                                Grid.Column="1"
										                                Visibility="{Binding HeadersVisibility,
										                                                     ConverterParameter={x:Static DataGridHeadersVisibility.Column},
										                                                     Converter={x:Static DataGrid.HeadersVisibilityConverter},
										                                                     RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
										                        Grid.Row="1"
										                        Grid.ColumnSpan="2"
										                        CanContentScroll="{TemplateBinding CanContentScroll}" />
                                                <ScrollBar 
                                                    x:Name="PART_VerticalScrollBar"
										            Grid.Row="1"
										            Grid.Column="2"
										            Maximum="{TemplateBinding ScrollableHeight}"
										            Orientation="Vertical"
										            Style="{DynamicResource MyScrollBar}"
										            ViewportSize="{TemplateBinding ViewportHeight}"
										            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
										            Value="{Binding VerticalOffset,
										                            Mode=OneWay,
										                            RelativeSource={RelativeSource TemplatedParent}}" />
                                                <Grid Grid.Row="2" Grid.Column="1">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                        <ColumnDefinition Width="*" />
                                                    </Grid.ColumnDefinitions>
                                                    <ScrollBar x:Name="PART_HorizontalScrollBar"
											           Grid.Column="1"
											           Maximum="{TemplateBinding ScrollableWidth}"
											           Orientation="Horizontal"
											           ViewportSize="{TemplateBinding ViewportWidth}"
											           Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
											           Value="{Binding HorizontalOffset,
											                           Mode=OneWay,
											                           RelativeSource={RelativeSource TemplatedParent}}" />
                                                </Grid>
                                            </Grid>
                                        </ControlTemplate>
                                    </ScrollViewer.Template>
                                    <ItemsPresenter 
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </ScrollViewer>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsGrouping" Value="True">
                        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <BooleanToVisibilityConverter x:Key="bool2VisibilityConverter" />

        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <!-- COUPONS HISTORY -->
        <Grid       
            x:Name="CouponsHistory"
            Canvas.ZIndex="99"
            Background="{StaticResource WhiteBrush}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid>
                <TextBlock
                    Text="COUPONS HISTORY"
                    Style="{StaticResource CouponsTextStyle}"/>
            </Grid>
            <DataGrid
                Grid.Row="1"
                ItemsSource="{Binding CouponHistory}"       
		        HorizontalAlignment="Left"
		        VerticalAlignment="Top"
		        AlternationCount="2"
		        AutoGenerateColumns="False"
                RowDetailsVisibilityMode="VisibleWhenSelected"
		        RowDetailsTemplate="{StaticResource RowDetailTemplate}"
                MinRowHeight="24"
                Margin="10">
                <DataGrid.RowHeaderTemplate>
                    <DataTemplate>
                        <ToggleButton
                            x:Name="RowHeaderToggleButton"
                            Cursor="Hand"
                            Click="OnRowHeaderToggleButtonClick"/>
                    </DataTemplate>
                </DataGrid.RowHeaderTemplate>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Code" Binding="{Binding Path=Coupon.Code}" Width="100*"/>
                    <DataGridTextColumn Header="Coupon" Binding="{Binding Path=Coupon.CouponText}" Width="500*"/>
                    <DataGridTextColumn Header="UserName" Binding="{Binding Path=Coupon.UserName}" Width="100*"/>
                    <DataGridTextColumn Header="Date" Binding="{Binding Path=Date}" Width="220*"/>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
    </Grid>
</UserControl>